@using Microsoft.AspNetCore.Components.Routing

@code {
    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public string Url { get; set; }

    [Parameter]
    public NavLinkMatch Match { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }
}

<li @ref="menuRef" class="@hasSubClass @openClass @hoverClass" @onmouseenter="HandleMouseEnterAsync" @onmouseleave="HandleMouseLeaveAsync" @onclick="HandleClickAsync" @onclick:stopPropagation="true">
    <ConditionalView Condition="ChildContent == null">
        <Passed>
            <NavLink href="@Url" Match="Match">
                <i class="bx bx-right-arrow-alt"></i>
                <span class="menu-title">@Title</span>
            </NavLink>
        </Passed>
        <Failed>
            <a class="cursor-pointer">
                <i class="bx bx-right-arrow-alt"></i>
                <span class="menu-title">@Title</span>
            </a>
            <ul class="menu-content">
                @ChildContent
            </ul>
        </Failed>
    </ConditionalView>
</li>

@code {
    private FrestLivicon iconRef;
    private ElementReference menuRef;
    private bool isOpen;
    private string hasSubClass, openClass, hoverClass;
}