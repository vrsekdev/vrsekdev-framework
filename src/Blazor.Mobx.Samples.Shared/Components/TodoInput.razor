@using VrsekDev.Blazor.Mobx.Components
@using VrsekDev.Blazor.Mobx.Extensions
@using VrsekDev.Blazor.Mobx.Samples.Models

@inherits BlazorMobxComponentBase<IHomeStore>

<h3>TodoInput</h3>

<p>Timer: @Store.Timer</p>

<p>
    Header: <input type="text" @bind="header" />
    Text:   <input type="text" @bind="text" />
    <button @onclick="AddTodo">Add todo</button>
</p>

<p>
    Id: <input type="number" @bind="id" />
    <button @onclick="LoadTodo">Load todo</button>

    <br />
    Header: <input type="text" @bind="loadedTodo.Header.Value" @bind:event="oninput" />
    Text:   <input type="text" @bind="loadedTodo.Text.Value" @bind:event="oninput" />

</p>

<p>
    Id: <input type="number" @bind="id" />
    <button @onclick="RemoveTodo">Remove todo</button>
</p>

@code {
    private string header;
    private string text;
    private int id;

    private ITodoItem loadedTodo;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        loadedTodo = CreateObservable<ITodoItem>();
        loadedTodo.Header.Value = "Default header";
        loadedTodo.Text.Value = "Default text";
    }

    protected void AddTodo()
    {
        var sw = System.Diagnostics.Stopwatch.StartNew();

        /*Store.Todos = Enumerable.Range(0, 1000).Select(x =>
        {
            var todo = CreateObservable<ITodoItem>();
            todo.Id = Store.TodoValue++;
            todo.Header.Value = header;
            todo.Text.Value = text;
            return todo;
        }).ToObservableArray();*/

        var todo = CreateObservable<ITodoItem>();
        todo.Id = Store.TodoValue++;
        todo.Header.Value = header;
        todo.Text.Value = text;

        Store.Todos.Add(todo);

        sw.Stop();

        Store.Timer = sw.ElapsedMilliseconds.ToString();
    }

    protected void RemoveTodo()
    {
        Store.Todos = Store.Todos.Where(x => x.Id != id).ToObservableCollection();
    }

    protected void LoadTodo()
    {
        ITodoItem todo = Store.Todos.SingleOrDefault(x => x.Id == id);
        if (todo == null)
        {
            return;
        }

        loadedTodo = todo;
    }
}